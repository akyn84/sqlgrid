{block handlers}
<script type="text/javascript" src="{$basePath}/vendor/vojtech-dobes/nette.ajax.js/nette.ajax.js"></script>
<script type="text/javascript">
    /** triggers */
    window.masalaData = [];
    if('handle()' === {$trigger}) {
        handleFilter(1);
    } else {
        {$trigger|noescape};
    }
    function handleActive(button) {
        $('#snippet--content').addClass('loading');
        var page = parseInt($(button).text());
        $('.paginate.paginate-dark.wrapper li a').attr('class', '');
        $('#pagination-top-current').val(page);
        $('#pagination-bottom-current').val(page);
        handleFilter(page);
    }
    function handleCancel() {
        $('#snippet--content').addClass('loading');
        location.href = window.location.href;
        return true;
    }
    function handleCsv() {
        window.masalaHandler = {link import!, 'stop'=>$stop};
        window.setTimeout(function() { angular.element('#lengthyProcess').triggerHandler('click'); });
    }
    function handleDialog(offset, id, name) {
        $('.' + {$control->getName()} + '-widget').animate({ right: '420'}, 'slow');
        $('.' + {$control->getName()} + '-widget .name-widget').text(name);
        $('.' + {$control->getName()} + '-widget .name-widget').attr('id', id);
        $('.' + {$control->getName()} + '-widget .name-widget').attr('offset', offset);
    }
    function handleDone() {

    }
    function handleExport() {
        window.masalaHandler = {link export!};
        angular.element('#lengthyProcess').triggerHandler('click');
    }
    function handleFilter(offset) {
        $('#snippet--content').addClass('loading');
        console.log('loading filter...');
        var data = getFilters();
        data.offset = offset;
        /** sort */
        $.nette.ajax({
            type: 'post',
            data: data,
            url: {link filter!},
            success: function (payload) {
                if(null == new RegExp({$control->getName()} + '\-spice\=').exec(location.href) && null == new RegExp(/\?/g).exec(location.href)) {
                    var url = location.href + '?' + payload.url;
                } else if(null == new RegExp({$control->getName()} + '-spice=').exec(location.href)) {
                    var url = location.href + '&' + payload.url;
                } else {
                    var url = location.href.replace(/&?masala-spice=([^&]$|[^&]*)/i, payload.url);
                }
                window.history.pushState('', 'title', url);
                $('tbody').replaceWith(payload.rows);
                $('#snippet--content').removeClass('loading');
                handlePaginate(data.offset);
            }
        });
    }
    function handleMessage() {

    }
    function handleMigrate() {
        window.masalaHandler = {link migrate!};
        angular.element('#lengthyProcess').triggerHandler('click');
    }
    function handlePaginate(offset) {
        console.log('loading pagination...');
        var data = getFilters();
        data.offset = offset;
        /** paginate */
        $.ajax({
            type: 'post',
            data: data,
            url: {link paginate!},
            success: function (payload) {
                if(0 < $('tbody input').length) {
                    getStorage();
                }
                if(40 < payload) {
                    $('.paginate.paginate-dark.wrapper.bottom').replaceWith(getPages(1, payload, 'bottom'));
                    $('.paginate.paginate-dark.wrapper.top').replaceWith(getPages(1, payload, 'top'));
                } else {
                    $('.paginate.paginate-dark.wrapper.bottom').replaceWith(getPages(data.offset, payload, 'bottom'));
                    $('.paginate.paginate-dark.wrapper.top').replaceWith(getPages(1, payload, 'top'));
                }
                var page = $('input#pagination-top-current').val();
                $('a#page-top-' + page).attr('class', 'active');
                $('a#page-bottom-' + page).attr('class', 'active');
                $('#snippet--content').removeClass('loading');
                if(40 < payload) {
                    $('div#pagination-top').slider({
                        range: false,
                        min: parseFloat(1),
                        max: parseFloat(payload - 40),
                        step: 1,
                        values: [ parseFloat(1)],
                        slide: function( event, ui ) {
                            $('#pagination').val(ui.values[0]);
                            $('#pagination-bottom').slider('values', [ui.values[0]]);
                            $('.paginate.paginate-dark.wrapper.top').replaceWith(getPages(ui.values[0], payload, 'top'));
                            $('.paginate.paginate-dark.wrapper.bottom').replaceWith(getPages(ui.values[0], payload, 'bottom'));
                            var page = $('input#pagination-top-current').val();
                            $('a#page-bottom-' + page).attr('class', 'active');
                            $('a#page-top-' + page).attr('class', 'active');
                        }
                    }).slider('pips').slider('float');
                    $('div#pagination-bottom').slider({
                        range: false,
                        min: parseFloat(1),
                        max: parseFloat(payload - 40),
                        step: 1,
                        values: [ parseFloat(1)],
                        slide: function( event, ui ) {
                            $('#pagination').val(ui.values[0]);
                            $('#pagination-top').slider('values', [ui.values[0]]);
                            $('.paginate.paginate-dark.wrapper.top').replaceWith(getPages(ui.values[0], payload, 'top'));
                            $('.paginate.paginate-dark.wrapper.bottom').replaceWith(getPages(ui.values[0], payload, 'bottom'));
                            var page = $('input#pagination-top-current').val();
                            $('a#page-bottom-'- + page).attr('class', 'active');
                            $('a#page-top-' + page).attr('class', 'active');
                        }
                    }).slider('pips');
                    $('input#pagination').val( $('div#pagination-top').slider('values',0) + ' - ' + payload );
                    $('input#pagination').val( $('div#pagination-bottom').slider('values',0) + ' - ' + payload );
                } else {
                    $('div#pagination-top').hide();
                }
                if(undefined == data.offset) {
                    data.offset = 1;
                }
                $('input#pagination').val(data.offset + ' - ' + payload);
            }
        });
    }
    function handlePrepare(data) {
        $('#snippet--content').addClass('loading');
        window.masalaHandler = {link prepare!};
        window.masalaData = data;
        window.setTimeout(function() { angular.element('#lengthyProcess').triggerHandler('click'); });
    }
    function handleRedraw(data) {
        $.nette.ajax({
            type: 'post',
            url: {link redraw!},
            data: data,
            success: function (payload) {
                var primary = 'tr#' + {$control->getName()} + '-rows-' + data.primary.replace(':', '\\:');
                if('' === payload) {
                    console.log(primary + ' hidden.');
                    $(primary).hide();
                } else {
                    console.log(primary + ' loading...');
                    $(primary).replaceWith(payload);
                    $(primary).removeClass('loading');
                }
            }
        });
    }
    function handleRun(payload) {
        var data = getFilters();
        data.csv = {$csv};
        data.row = payload;
        if (payload.run < parseInt(payload.stop)) {
            $.nette.ajax({
                type: 'post',
                url: {link run!},
                data: data,
                success: function (payload) {
                    handleRun(payload);
                }
            });
            $('.progress .progress-bar').attr('data-transitiongoal', data.row['run'] / (data.row['stop'] / 100)).progressbar({ display_text: 'center'});
        } else {
            $.nette.ajax({ type: 'post',
                url: {link done!},
                data: data,
                success: function(payload) {
                    /* disable this redirect during debugging in console */
                    location.href = payload;
                }});
        }
    }
    function handleSort(column) {
        var id = 'img#' + {$control->getName()} + '-' + column + '-';
        $('tr.grid-columns').attr('order', column);
        if('display: none;' == $(id + 'desc').attr('style')) {
            $('.grid-columns img.sort').hide();
            $(id + 'desc').show();
            $('tr.grid-columns').attr('sort', 'desc');
        } else if('display: none;' == $(id + 'asc').attr('style')) {
            $('.grid-columns img.sort').hide();
            $(id + 'asc').show();
            $('tr.grid-columns').attr('sort', 'asc');
        }
        handleFilter(1);
    }
    function handleSubmit(submit) {
        var data = getFilters();
        $('.' + {$control->getName()} +'-widget .inside-widget textarea').each(function () {
            var id = $(this).attr('id');
            data[id] = $(this).val();
        });
        data.submit = submit;
        data.id = $('.' + {$control->getName()} +'-widget .name-widget').attr('id');
        data.offset = $('.' + {$control->getName()} + '-widget .name-widget').attr('offset');
        $('#snippet--content').removeClass('loading');
        if(undefined === data.id) {
            alert({_'There is nothing to edit. First choose item.'});
            return false;
        }
        $('tr#' + {$control->getName()} + '-rows-' + data.primary.replace(':', '\\:')).addClass('loading');
        $.nette.ajax({
            type: 'post',
            url: {link submit!},
            data: data,
            success: function(payload) {
                handleRedraw(payload);
            }
        });
    }
    function handleStart() {
        var data = getFilters();
        for (var key in masalaData) {
            data[key] = masalaData[key];
        };
        $.nette.ajax({
            type: 'post',
            data: data,
            url: masalaHandler,
            success: function (payload) {
                handleRun(payload);
            }
        });
    }
    function handleStorage(input) {
        console.log('loading storage...');
        var keys = localStorage.getItem({$control->getName()} + ':keys');
        var hash = localStorage.getItem({$control->getName()} + ':hash');
        var parent = input.parentsUntil('tbody').last();
        parent.find(input).attr('value', input.val());
        localStorage.setItem({$control->getName()} + ':' + input.attr('name'), input.val());
        localStorage.setItem(parent.attr('id'), parent.html());
        if(null === keys) {
            keys = new Object();
            hash = new Object();
        } else {
            keys = JSON.parse(keys);
            hash = JSON.parse(hash);
        }
        keys[input.attr('name')] = true;
        hash[parent.attr('id')] = true;
        localStorage.setItem({$control->getName()} + ':keys', JSON.stringify(keys));
        localStorage.setItem({$control->getName()} + ':hash', JSON.stringify(hash));
    }
</script>
{/block}
